#!/usr/bin/env ruby

# == beaker_importer.rb
# This script adds test results in testrail from a finished beaker run
# It takes in a beaker junit file and a TestRail Testrun ID
# 
# It matches the beaker tests with TestRail testcases by looking for the 
#   test case ID in the beaker script. The combination of a test run and a test case
#   allows the script to add a result for a particular instance of a test case.
#   In TestRail parlance, this is confusingly called a test.
# From the TestRail API docs:
#   "In TestRail, tests are part of a test run and the test cases are part of the
#   related test suite. So, when you create a new test run, TestRail creates a test
#   for each test case found in the test suite of the run. You can therefore think
#   of a test as an “instance” of a test case which can have test results, comments 
#   and a test status.""

require 'beaker_testrail'
require 'optparse'

# Parses the command line options
# @return [Void]
def parse_opts
  options_hash = {}

  optparse = OptionParser.new do|parser|
    options_hash = {
      testrun_id: nil,
      junit_file: nil,
    }

    parser.on( '-t', '--testrun-id TESTRUN_ID', 'The testrun id' ) do |testrun_id|
      options_hash[:testrun_id] = testrun_id
    end

    parser.on( '-j', '--junit-folder JUNIT_FILE', 'Beaker junit file' ) do |junit_file|
      options_hash[:junit_file] = junit_file
    end

    parser.on( '-h', '--help', 'Display this screen' ) do
      puts parser
      exit
    end

    parser.parse!

    if not options_hash[:testrun_id] or not options_hash[:junit_file]
      puts "Error: Missing option(s)"
      puts parser
      exit
    end
  end

  options_hash
end

BeakerTestrail::main(parse_opts)
